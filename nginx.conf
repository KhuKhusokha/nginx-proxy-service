# /etc/nginx/conf.d/default.conf
# This file will be copied into your Nginx Docker container

# Define an upstream block for your n8n service
# IMPORTANT: Replace 'n8n-service-name' with the actual INTERNAL name of your n8n service on Render.
# This internal name is usually the service name you give it on Render, converted to lowercase and hyphens.
# The port should match the N8N_PORT you set (e.g., 10000)
upstream n8n_backend {
    # **REPLACE THIS LINE:**
    # Example: If your n8n service on Render is named "my-n8n-app", use:
    server my-n8n-app.internal:10000;
    # You will get the exact internal name from Render *after* you create the n8n service.
    # For now, you can use a placeholder like 'n8n-service-name.internal:10000' and update it later.
}

server {
    listen 80; # Nginx listens on port 80 internally
    listen [::]:80;

    # Add your Render public domain or custom domain here if you have one
    # This line is optional. Render automatically handles the host header.
    # server_name your-nginx-latest-ze5n.onrender.com; # Or your custom domain e.g., automation.yourdomain.com

    # Main location block to proxy all requests to n8n
    location / {
        proxy_pass http://n8n_backend; # Forward requests to the n8n upstream
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Tells n8n if original request was HTTP or HTTPS

        # Important for WebSocket connections (n8n UI, executions)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        # Optional: Increase proxy timeouts if you experience issues with long-running operations
        proxy_read_timeout 300s; # 5 minutes
        proxy_send_timeout 300s; # 5 minutes
    }

    # If you need to serve static files with Nginx for a custom front-end,
    # you'd add more location blocks here.
}
